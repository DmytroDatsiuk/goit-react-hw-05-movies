{"version":3,"file":"static/js/672.e51cdc0f.chunk.js","mappings":"mQAEAA,EAAAA,EAAAA,SAAAA,QAAyB,gCAElB,IAAMC,EAAiB,mCAAG,6FACzBC,EAAS,CACbC,QAAS,oCAFoB,SAKRH,EAAAA,EAAAA,IAAU,qBAAsB,CACrDE,OAAAA,IAN6B,cAKzBE,EALyB,yBASxBA,EAASC,KAAKC,SATU,2CAAH,qDAYjBC,EAAe,mCAAG,WAAMC,GAAN,gFACvBN,EAAS,CACbC,QAAS,mCACTK,MAAAA,EACAC,eAAe,EACfC,SAAU,SALiB,SAQNV,EAAAA,EAAAA,IAAU,eAAgB,CAC/CE,OAAAA,IAT2B,cAQvBE,EARuB,yBAYtBA,EAASC,KAAKC,SAZQ,2CAAH,sDAefK,EAAe,mCAAG,WAAMC,GAAN,gFACvBV,EAAS,CACbC,QAAS,mCACTO,SAAU,SAHiB,SAMNV,EAAAA,EAAAA,IAAA,gBAAmBY,GAAM,CAC9CV,OAAAA,IAP2B,cAMvBE,EANuB,yBAUtBA,EAASC,MAVa,2CAAH,qD,kKC3BtBQ,GAAaC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,0OAcHE,EAAW,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,GAAIC,EAAe,EAAfA,SAC7B,OACE,UAACL,EAAD,CAAYI,GAAIA,EAAhB,WACE,SAAC,MAAD,CAAaE,KAAK,OACjBD,IAGN,E,UCtBYE,GAAON,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,kVCyCjB,EAzC0B,SAAC,GAAkD,IAAhDO,EAA+C,EAA/CA,IAAKC,EAA0C,EAA1CA,IAAKC,EAAqC,EAArCA,MAAOC,EAA8B,EAA9BA,MAAOC,EAAuB,EAAvBA,SAAUC,EAAa,EAAbA,OAC7D,OACE,4BACE,4BACE,gBACEC,IACEN,EAAG,6CACuCA,GACtC,uIAENO,IAAKN,EACLO,MAAO,OAGT,4BACE,wBAAKN,KACL,wCAAgBO,KAAKC,MAAc,GAARP,GAA3B,QACA,sCACA,uBAAIC,KACJ,oCACA,wBACGC,EAAOM,KAAI,SAAAC,GAAK,OACf,wBAAoBA,EAAMC,MAAjBD,EAAMrB,GADA,aAMvB,oDACA,2BACE,yBACE,SAACQ,EAAD,CAAMH,GAAG,OAAT,qBAEF,yBACE,SAACG,EAAD,CAAMH,GAAG,UAAT,2BAGJ,SAAC,KAAD,MAGL,E,oBCDD,EAlCsB,WAAO,IAAD,IAC1B,GAAwCkB,EAAAA,EAAAA,UAAS,MAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,MACXC,GAAMC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,WAa3C,OAXAC,EAAAA,EAAAA,YAAU,YACR,iBAAC,8GAE0BnC,EAAAA,EAAAA,IAAgB2B,GAF1C,OAESlC,EAFT,OAGGiC,EAAgBjC,GAHnB,gDAKG2C,QAAQC,IAAR,MALH,wDAAD,EAQD,GAAE,CAACV,KAGF,iCACE,SAACtB,EAAD,CAAUC,GAAIyB,EAAIO,QAAlB,qBACCb,IACC,SAAC,EAAD,CACEd,IAAKc,EAAab,MAClBF,IAAKe,EAAac,YAClB3B,MAAOa,EAAab,MACpBC,MAAOY,EAAae,aACpB1B,SAAUW,EAAaX,SACvBC,OAAQU,EAAaV,WAK9B,C","sources":["Service/GetMovies.js","components/BackLink.jsx","components/MoviesDate/MoviesData.styled.jsx","components/MoviesDate/MoviesData.jsx","pages/MoviesDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const GetTrendingMovies = async () => {\n  const params = {\n    api_key: '3698df5e437f17f7b871cad5fa2ce7cd',\n  };\n\n  const response = await axios.get('trending/movie/day', {\n    params,\n  });\n\n  return response.data.results;\n};\n\nexport const GetSearchMovies = async query => {\n  const params = {\n    api_key: '3698df5e437f17f7b871cad5fa2ce7cd',\n    query,\n    include_adult: false,\n    language: 'en-US',\n  };\n\n  const response = await axios.get('search/movie', {\n    params,\n  });\n\n  return response.data.results;\n};\n\nexport const GetDetailsMovie = async id => {\n  const params = {\n    api_key: '3698df5e437f17f7b871cad5fa2ce7cd',\n    language: 'en-US',\n  };\n\n  const response = await axios.get(`movie/${id}`, {\n    params,\n  });\n\n  return response.data;\n};\n","import { HiArrowLeft } from 'react-icons/hi';\nimport { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst StyledLink = styled(NavLink)`\n  display: inline-flex;\n  align-items: center;\n  gap: 4px;\n  padding: 8px 0;\n  color: black;\n  text-decoration: none;\n  font-weight: 500;\n  text-transform: uppercase;\n  :hover {\n    color: blue;\n  }\n`;\n\nexport const BackLink = ({ to, children }) => {\n  return (\n    <StyledLink to={to}>\n      <HiArrowLeft size=\"12\" />\n      {children}\n    </StyledLink>\n  );\n};\n","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const Link = styled(NavLink)`\n  display: inline-block;\n  padding: 3px 10px;\n  margin-bottom: 10px;\n  box-shadow: 0px 4px 5px 0px rgba(0, 0, 0, 0.5);\n\n  border-radius: 10px;\n  color: #000000;\n  text-decoration: none;\n  text-align: center;\n  width: 80px;\n  :hover,\n  :focus {\n    color: #ffffff;\n    background-color: #a8a8ee;\n  }\n`;\n","import { Outlet } from 'react-router-dom';\nimport { Link } from './MoviesData.styled';\n\nexport const MoviesData = ({ url, tag, title, score, overview, genres }) => {\n  return (\n    <div>\n      <div>\n        <img\n          src={\n            url\n              ? `https://image.tmdb.org/t/p/original${url}`\n              : 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTsiVE6bpD6TDmfsrz4LwcCRl-TWNy5zq_qFxjkJ3NqeQ4bgotQt5IRpH1m7SBt9f-O1ag&usqp=CAU'\n          }\n          alt={tag}\n          width={300}\n        />\n\n        <div>\n          <h2>{title}</h2>\n          <p>User Score: {Math.round(score * 10)}%</p>\n          <h3>Overview</h3>\n          <p>{overview}</p>\n          <h4>Genres</h4>\n          <ul>\n            {genres.map(genre => (\n              <li key={genre.id}>{genre.name}</li>\n            ))}\n          </ul>\n        </div>\n      </div>\n      <h2>Additional information</h2>\n      <ul>\n        <li>\n          <Link to=\"cast\">Cast</Link>\n        </li>\n        <li>\n          <Link to=\"reviews\">Reviews</Link>\n        </li>\n      </ul>\n      <Outlet />\n    </div>\n  );\n};\n\nexport default MoviesData;\n","import { BackLink } from 'components/BackLink';\nimport MoviesData from 'components/MoviesDate/MoviesData';\nimport { useEffect, useRef, useState } from 'react';\n\nimport { useLocation, useParams } from 'react-router-dom';\nimport { GetDetailsMovie } from 'Service/GetMovies';\n\nconst MoviesDetails = () => {\n  const [movieDetails, setMovieDetails] = useState(null);\n  const { movieId } = useParams();\n  const location = useLocation();\n  const ref = useRef(location.state?.from ?? '/movies');\n\n  useEffect(() => {\n    (async () => {\n      try {\n        const response = await GetDetailsMovie(movieId);\n        setMovieDetails(response);\n      } catch (error) {\n        console.log(error);\n      }\n    })();\n  }, [movieId]);\n\n  return (\n    <>\n      <BackLink to={ref.current}>Go Back</BackLink>\n      {movieDetails && (\n        <MoviesData\n          tag={movieDetails.title}\n          url={movieDetails.poster_path}\n          title={movieDetails.title}\n          score={movieDetails.vote_average}\n          overview={movieDetails.overview}\n          genres={movieDetails.genres}\n        />\n      )}\n    </>\n  );\n};\n\nexport default MoviesDetails;\n"],"names":["axios","GetTrendingMovies","params","api_key","response","data","results","GetSearchMovies","query","include_adult","language","GetDetailsMovie","id","StyledLink","styled","NavLink","BackLink","to","children","size","Link","url","tag","title","score","overview","genres","src","alt","width","Math","round","map","genre","name","useState","movieDetails","setMovieDetails","movieId","useParams","location","useLocation","ref","useRef","state","from","useEffect","console","log","current","poster_path","vote_average"],"sourceRoot":""}