{"version":3,"file":"static/js/614.32db53e1.chunk.js","mappings":"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","sources":["Service/GetMovies.js","components/MoviesList/MoviesList.jsx","components/MoviesList/MoviesList.styled.jsx","components/LoadMore/LoadMore.styled.jsx","components/LoadMore/LoadMore.jsx","components/SearchMovie/SearchMovie.styled.jsx","components/SearchMovie/SearchMovie.jsx","pages/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const GetTrendingMovies = async () => {\n  const params = {\n    api_key: '3698df5e437f17f7b871cad5fa2ce7cd',\n  };\n\n  const response = await axios.get('trending/movie/day', {\n    params,\n  });\n\n  return response.data.results;\n};\n\nexport const GetSearchMovies = async (query, page) => {\n  const params = {\n    api_key: '3698df5e437f17f7b871cad5fa2ce7cd',\n    query,\n    page,\n    include_adult: false,\n    language: 'en-US',\n  };\n\n  const response = await axios.get('search/movie', {\n    params,\n  });\n\n  return response.data.results;\n};\n\nexport const GetDetailsMovie = async id => {\n  const params = {\n    api_key: '3698df5e437f17f7b871cad5fa2ce7cd',\n    language: 'en-US',\n  };\n\n  const response = await axios.get(`movie/${id}`, {\n    params,\n  });\n\n  return response.data;\n};\n\nexport const GetCastData = async id => {\n  const params = {\n    api_key: '3698df5e437f17f7b871cad5fa2ce7cd',\n    language: 'en-US',\n  };\n\n  const response = await axios.get(`movie/${id}/credits`, { params });\n\n  return response.data.cast;\n};\n\nexport const GetReviewsData = async id => {\n  const params = {\n    api_key: '3698df5e437f17f7b871cad5fa2ce7cd',\n    language: 'en-US',\n  };\n\n  const response = await axios.get(`movie/${id}/reviews`, { params });\n\n  return response.data.results;\n};\n","import { List, Item, Img, Description, Link } from './MoviesList.styled';\nimport { useLocation } from 'react-router-dom';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <>\n      <List>\n        {movies.map(({ id, poster_path, title }, idx) => {\n          return (\n            <Item key={idx}>\n              <Link to={`/movies/${id}`} state={{ from: location }}>\n                <Img\n                  src={\n                    poster_path\n                      ? `https://image.tmdb.org/t/p/original${poster_path}`\n                      : 'https://www.reelviews.net/resources/img/default_poster.jpg'\n                  }\n                  alt=\"poster movie\"\n                />\n                <Description>{title}</Description>\n              </Link>\n            </Item>\n          );\n        })}\n      </List>\n    </>\n  );\n};\n\nexport default MoviesList;\n","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  justify-content: center;\n  align-items: baseline;\n  flex-wrap: wrap;\n  gap: 30px;\n  margin-bottom: 20px;\n`;\n\nexport const Item = styled.li`\n  text-align: center;\n\n  width: 300px;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover {\n    transform: scale(1.1);\n  }\n`;\n\nexport const Img = styled.img`\n  border: 1px solid lightskyblue;\n  border-radius: 8px;\n  margin-bottom: 5px;\n`;\n\nexport const Description = styled.p`\n  color: lightskyblue;\n`;\n\nexport const ListGenre = styled.ul`\n  list-style-type: none;\n  padding: 0;\n`;\nexport const ItemGenre = styled.li`\n  list-style-type: none;\n`;\n\nexport const Link = styled(NavLink)`\n  text-decoration: none;\n`;\n","import styled from 'styled-components';\n\nexport const Button = styled.button`\n  display: block;\n  margin-left: auto;\n  margin-right: auto;\n  padding: 15px;\n  border: 0;\n  border-radius: 7px;\n  color: white;\n  background-color: lightskyblue;\n  cursor: pointer;\n  margin-bottom: 20px;\n\n  &:hover {\n    background-color: lightblue;\n  }\n\n  &:active {\n    background-color: #62afc9;\n  }\n`;\n","import { Button } from './LoadMore.styled';\n\nexport const LoadMore = ({ loader }) => {\n  return <Button onClick={loader}>Load More</Button>;\n};\n","import styled from 'styled-components';\nimport { Form as FormikForm, Field as FastField } from 'formik';\n\nexport const Form = styled(FormikForm)`\n  margin-left: auto;\n  margin-right: auto;\n  margin-bottom: 15px;\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: #47ced3;\n  border-radius: 3px;\n  overflow: hidden;\n`;\n\nexport const SearchFormButton = styled.button`\n  display: inline-block;\n  width: 48px;\n  height: 48px;\n  border: 0;\n  background-size: 40%;\n  background-repeat: no-repeat;\n  background-position: center;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n\n  &:hover {\n    opacity: 1;\n  }\n`;\n\nexport const SearchFormButtonLabel = styled.span`\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  white-space: nowrap;\n  clip-path: inset(50%);\n  border: 0;\n`;\n\nexport const Field = styled(FastField)`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n  background-color: #47ced3;\n  color: white;\n\n  &::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\n","import React, { useState } from 'react';\nimport {\n  Form,\n  SearchFormButton,\n  SearchFormButtonLabel,\n  Field,\n} from './SearchMovie.styled';\nimport { FcSearch } from 'react-icons/fc';\nimport { toast } from 'react-toastify';\nimport { Formik } from 'formik';\nimport PropTypes from 'prop-types';\n\nexport const SearchMovie = ({ onSearch }) => {\n  const [searchQuery, setSearchQuery] = useState('');\n\n  const handleSearchQueryChange = e => {\n    setSearchQuery(e.currentTarget.value.toLowerCase());\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (searchQuery.trim() === '') {\n      toast.warn('Input search query');\n      return;\n    }\n    onSearch(searchQuery);\n  };\n\n  return (\n    <Formik initialValues={{ search: '' }}>\n      <Form onSubmit={handleSubmit}>\n        <SearchFormButton type=\"submit\">\n          <FcSearch />\n          <SearchFormButtonLabel>Search</SearchFormButtonLabel>\n        </SearchFormButton>\n        <Field\n          type=\"text\"\n          name=\"search\"\n          autoFocus\n          placeholder=\"Search images and photos\"\n          value={searchQuery}\n          onChange={handleSearchQueryChange}\n        />\n      </Form>\n    </Formik>\n  );\n};\n\nSearchMovie.propTypes = {\n  onSearch: PropTypes.func.isRequired,\n};\n","import { LoadMore } from 'components/LoadMore/LoadMore';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport { SearchMovie } from 'components/SearchMovie/SearchMovie';\nimport { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { GetSearchMovies } from 'Service/GetMovies';\n\nconst Movie = () => {\n  const [movies, setMovies] = useState([]);\n  const [page, setPage] = useState(1);\n  const [isLoading, setIsLoading] = useState(false);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const movieName = searchParams.get('query');\n\n  useEffect(() => {\n    if (!movieName) {\n      return;\n    }\n    setIsLoading(true);\n    (async () => {\n      try {\n        const response = await GetSearchMovies(movieName, page);\n        setMovies(prev => [...prev, ...response]);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setIsLoading(false);\n      }\n    })();\n  }, [movieName, page]);\n\n  const handleSearch = query => {\n    setSearchParams({ query });\n  };\n\n  const loader = () => {\n    setPage(page + 1);\n  };\n\n  return (\n    <>\n      <SearchMovie onSearch={handleSearch} />\n      <MoviesList movies={movies} loader={loader} />\n      {isLoading && <div>Loading...</div>}\n      {movies.length !== 0 && !isLoading && <LoadMore loader={loader} />}\n    </>\n  );\n};\n\nexport default Movie;\n"],"names":["axios","GetTrendingMovies","params","api_key","response","data","results","GetSearchMovies","query","page","include_adult","language","GetDetailsMovie","id","GetCastData","cast","GetReviewsData","movies","location","useLocation","map","idx","poster_path","title","to","state","from","src","alt","List","styled","Item","Img","Description","ListGenre","ItemGenre","Link","NavLink","Button","LoadMore","loader","onClick","Form","FormikForm","SearchFormButton","SearchFormButtonLabel","Field","FastField","SearchMovie","onSearch","useState","searchQuery","setSearchQuery","initialValues","search","onSubmit","e","preventDefault","trim","toast","type","name","autoFocus","placeholder","value","onChange","currentTarget","toLowerCase","setMovies","setPage","isLoading","setIsLoading","useSearchParams","searchParams","setSearchParams","movieName","get","useEffect","prev","console","log","MoviesList","length"],"sourceRoot":""}