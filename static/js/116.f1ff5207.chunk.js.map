{"version":3,"file":"static/js/116.f1ff5207.chunk.js","mappings":"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","sources":["Service/GetMovies.js","components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","components/SearchMovie/SearchMovie.styled.jsx","components/SearchMovie/SearchMovie.jsx","pages/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const GetTrendingMovies = async () => {\n  const params = {\n    api_key: '3698df5e437f17f7b871cad5fa2ce7cd',\n  };\n\n  const response = await axios.get('trending/movie/day', {\n    params,\n  });\n\n  return response.data.results;\n};\n\nexport const GetSearchMovies = async query => {\n  const params = {\n    api_key: '3698df5e437f17f7b871cad5fa2ce7cd',\n    query,\n    include_adult: false,\n    language: 'en-US',\n  };\n\n  const response = await axios.get('search/movie', {\n    params,\n  });\n\n  return response.data.results;\n};\n\nexport const GetDetailsMovie = async id => {\n  const params = {\n    api_key: '3698df5e437f17f7b871cad5fa2ce7cd',\n    language: 'en-US',\n  };\n\n  const response = await axios.get(`movie/${id}`, {\n    params,\n  });\n\n  return response.data;\n};\n","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  justify-content: baseline;\n  align-items: baseline;\n  flex-wrap: wrap;\n  gap: 42px;\n`;\n\nexport const Item = styled.li`\n  text-align: center;\n`;\n\nexport const Img = styled.img`\n  width: 300px;\n  border: 1px solid lightskyblue;\n  border-radius: 8px;\n  margin-bottom: 5px;\n`;\n\nexport const Description = styled.p`\n  color: lightskyblue;\n  width: 300px;\n`;\n\nexport const Link = styled(NavLink)`\n  text-decoration: none;\n`;\n","import { List, Item, Img, Description, Link } from './MoviesList.styled';\nimport { useLocation } from 'react-router-dom';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <List>\n      {movies.map(({ id, poster_path, title }) => {\n        return (\n          <Item key={id}>\n            <Link to={`/movie/${id}`} state={{ from: location }}>\n              <Img\n                src={\n                  poster_path\n                    ? `https://image.tmdb.org/t/p/original${poster_path}`\n                    : 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTsiVE6bpD6TDmfsrz4LwcCRl-TWNy5zq_qFxjkJ3NqeQ4bgotQt5IRpH1m7SBt9f-O1ag&usqp=CAU'\n                }\n                alt=\"poster movie\"\n              />\n              <Description>{title}</Description>\n            </Link>\n          </Item>\n        );\n      })}\n    </List>\n  );\n};\n\nexport default MoviesList;\n","import styled from 'styled-components';\nimport { Form as FormikForm, Field as FastField } from 'formik';\n\nexport const Form = styled(FormikForm)`\n  margin-left: auto;\n  margin-right: auto;\n  margin-bottom: 15px;\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: #47ced3;\n  border-radius: 3px;\n  overflow: hidden;\n`;\n\nexport const SearchFormButton = styled.button`\n  display: inline-block;\n  width: 48px;\n  height: 48px;\n  border: 0;\n  background-size: 40%;\n  background-repeat: no-repeat;\n  background-position: center;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n\n  &:hover {\n    opacity: 1;\n  }\n`;\n\nexport const SearchFormButtonLabel = styled.span`\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  white-space: nowrap;\n  clip-path: inset(50%);\n  border: 0;\n`;\n\nexport const Field = styled(FastField)`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n  background-color: #47ced3;\n  color: white;\n\n  &::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\n","import React, { useState } from 'react';\nimport {\n  Form,\n  SearchFormButton,\n  SearchFormButtonLabel,\n  Field,\n} from './SearchMovie.styled';\nimport { FcSearch } from 'react-icons/fc';\nimport { toast } from 'react-toastify';\nimport { Formik } from 'formik';\nimport PropTypes from 'prop-types';\n\nexport const SearchMovie = ({ onSearch }) => {\n  const [searchQuery, setSearchQuery] = useState('');\n\n  const handleSearchQueryChange = e => {\n    setSearchQuery(e.currentTarget.value.toLowerCase());\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (searchQuery.trim() === '') {\n      toast.warn('Input search query');\n      return;\n    }\n    onSearch(searchQuery);\n  };\n\n  return (\n    <Formik initialValues={{ search: '' }}>\n      <Form onSubmit={handleSubmit}>\n        <SearchFormButton type=\"submit\">\n          <FcSearch />\n          <SearchFormButtonLabel>Search</SearchFormButtonLabel>\n        </SearchFormButton>\n        <Field\n          type=\"text\"\n          name=\"search\"\n          autoFocus\n          placeholder=\"Search images and photos\"\n          value={searchQuery}\n          onChange={handleSearchQueryChange}\n        />\n      </Form>\n    </Formik>\n  );\n};\n\nSearchMovie.propTypes = {\n  onSearch: PropTypes.func.isRequired,\n};\n","import MoviesList from 'components/MoviesList/MoviesList';\nimport { SearchMovie } from 'components/SearchMovie/SearchMovie';\nimport { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { GetSearchMovies } from 'Service/GetMovies';\n\nconst Movie = () => {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const movieName = searchParams.get('query');\n\n  useEffect(() => {\n    if (!movieName) {\n      return;\n    }\n\n    setIsLoading(true);\n    (async () => {\n      try {\n        const response = await GetSearchMovies(movieName);\n        setMovies(response);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setIsLoading(false);\n      }\n    })();\n  }, [movieName]);\n\n  const handleSearch = query => {\n    setSearchParams({ query });\n  };\n\n  return (\n    <>\n      <SearchMovie onSearch={handleSearch} />\n      {isLoading ? <div>Loading...</div> : <MoviesList movies={movies} />}\n    </>\n  );\n};\n\nexport default Movie;\n"],"names":["axios","GetTrendingMovies","params","api_key","response","data","results","GetSearchMovies","query","include_adult","language","GetDetailsMovie","id","List","styled","Item","Img","Description","Link","NavLink","movies","location","useLocation","map","poster_path","title","to","state","from","src","alt","Form","FormikForm","SearchFormButton","SearchFormButtonLabel","Field","FastField","SearchMovie","onSearch","useState","searchQuery","setSearchQuery","initialValues","search","onSubmit","e","preventDefault","trim","toast","type","name","autoFocus","placeholder","value","onChange","currentTarget","toLowerCase","setMovies","isLoading","setIsLoading","useSearchParams","searchParams","setSearchParams","movieName","get","useEffect","console","log","MoviesList"],"sourceRoot":""}