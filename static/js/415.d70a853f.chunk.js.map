{"version":3,"file":"static/js/415.d70a853f.chunk.js","mappings":"mTAEAA,EAAAA,EAAAA,SAAAA,QAAyB,gCAElB,IAAMC,EAAiB,mCAAG,6FACzBC,EAAS,CACbC,QAAS,oCAFoB,SAKRH,EAAAA,EAAAA,IAAU,qBAAsB,CACrDE,OAAAA,IAN6B,cAKzBE,EALyB,yBASxBA,EAASC,KAAKC,SATU,2CAAH,qDAYjBC,EAAe,mCAAG,WAAOC,EAAOC,GAAd,gFACvBP,EAAS,CACbC,QAAS,mCACTK,MAAAA,EACAC,KAAAA,EACAC,eAAe,EACfC,SAAU,SANiB,SASNX,EAAAA,EAAAA,IAAU,eAAgB,CAC/CE,OAAAA,IAV2B,cASvBE,EATuB,yBAatBA,EAASC,KAAKC,SAbQ,2CAAH,wDAgBfM,EAAe,mCAAG,WAAMC,GAAN,gFACvBX,EAAS,CACbC,QAAS,mCACTQ,SAAU,SAHiB,SAMNX,EAAAA,EAAAA,IAAA,gBAAmBa,GAAM,CAC9CX,OAAAA,IAP2B,cAMvBE,EANuB,yBAUtBA,EAASC,MAVa,2CAAH,sDAafS,EAAW,mCAAG,WAAMD,GAAN,gFACnBX,EAAS,CACbC,QAAS,mCACTQ,SAAU,SAHa,SAMFX,EAAAA,EAAAA,IAAA,gBAAmBa,EAAnB,YAAiC,CAAEX,OAAAA,IANjC,cAMnBE,EANmB,yBAQlBA,EAASC,KAAKU,MARI,2CAAH,sDAWXC,EAAc,mCAAG,WAAMH,GAAN,gFACtBX,EAAS,CACbC,QAAS,mCACTQ,SAAU,SAHgB,SAMLX,EAAAA,EAAAA,IAAA,gBAAmBa,EAAnB,YAAiC,CAAEX,OAAAA,IAN9B,cAMtBE,EANsB,yBAQrBA,EAASC,KAAKC,SARO,2CAAH,qD,wDC1B3B,IA3BmB,SAAC,GAAgB,IAAdW,EAAa,EAAbA,OACdC,GAAWC,EAAAA,EAAAA,MACjB,OACE,+BACE,SAAC,KAAD,UACGF,EAAOG,KAAI,WAA6BC,GAAS,IAAnCR,EAAkC,EAAlCA,GAAIS,EAA8B,EAA9BA,YAAaC,EAAiB,EAAjBA,MAC9B,OACE,SAAC,KAAD,WACE,UAAC,KAAD,CAAMC,GAAE,kBAAaX,GAAMY,MAAO,CAAEC,KAAMR,GAA1C,WACE,SAAC,KAAD,CACES,IACEL,EAAW,6CAC+BA,GACtC,6DAENM,IAAI,kBAEN,SAAC,KAAD,UAAcL,QAVPF,EAcd,OAIR,C,uPCzBYQ,EAAOC,EAAAA,GAAAA,GAAH,0JASJC,EAAOD,EAAAA,GAAAA,GAAH,+KAWJE,EAAMF,EAAAA,GAAAA,IAAH,yGAMHG,EAAcH,EAAAA,GAAAA,EAAH,gDAIXI,EAAYJ,EAAAA,GAAAA,GAAH,iEAITK,EAAYL,EAAAA,GAAAA,GAAH,kDAITM,GAAON,EAAAA,EAAAA,IAAOO,EAAAA,GAAPP,CAAH,iD,gHCXjB,UA1Ba,WACX,OAA4BQ,EAAAA,EAAAA,UAAS,IAArC,eAAOrB,EAAP,KAAesB,EAAf,KACA,GAAkCD,EAAAA,EAAAA,WAAS,GAA3C,eAAOE,EAAP,KAAkBC,EAAlB,KAgBA,OAdAC,EAAAA,EAAAA,YAAU,WACRD,GAAa,IACb,iBAAC,8GAE0BxC,EAAAA,EAAAA,MAF1B,OAESG,EAFT,OAGGmC,EAAUnC,GAHb,gDAKGuC,QAAQC,IAAR,MALH,yBAOGH,GAAa,GAPhB,2EAAD,EAUD,GAAE,KAGD,iCACE,SAAC,IAAD,CAAYxB,OAAQA,IACnBuB,IAAa,0CAGnB,C","sources":["Service/GetMovies.js","components/MoviesList/MoviesList.jsx","components/MoviesList/MoviesList.styled.jsx","pages/Home.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const GetTrendingMovies = async () => {\n  const params = {\n    api_key: '3698df5e437f17f7b871cad5fa2ce7cd',\n  };\n\n  const response = await axios.get('trending/movie/day', {\n    params,\n  });\n\n  return response.data.results;\n};\n\nexport const GetSearchMovies = async (query, page) => {\n  const params = {\n    api_key: '3698df5e437f17f7b871cad5fa2ce7cd',\n    query,\n    page,\n    include_adult: false,\n    language: 'en-US',\n  };\n\n  const response = await axios.get('search/movie', {\n    params,\n  });\n\n  return response.data.results;\n};\n\nexport const GetDetailsMovie = async id => {\n  const params = {\n    api_key: '3698df5e437f17f7b871cad5fa2ce7cd',\n    language: 'en-US',\n  };\n\n  const response = await axios.get(`movie/${id}`, {\n    params,\n  });\n\n  return response.data;\n};\n\nexport const GetCastData = async id => {\n  const params = {\n    api_key: '3698df5e437f17f7b871cad5fa2ce7cd',\n    language: 'en-US',\n  };\n\n  const response = await axios.get(`movie/${id}/credits`, { params });\n\n  return response.data.cast;\n};\n\nexport const GetReviewsData = async id => {\n  const params = {\n    api_key: '3698df5e437f17f7b871cad5fa2ce7cd',\n    language: 'en-US',\n  };\n\n  const response = await axios.get(`movie/${id}/reviews`, { params });\n\n  return response.data.results;\n};\n","import { List, Item, Img, Description, Link } from './MoviesList.styled';\nimport { useLocation } from 'react-router-dom';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <>\n      <List>\n        {movies.map(({ id, poster_path, title }, idx) => {\n          return (\n            <Item key={idx}>\n              <Link to={`/movies/${id}`} state={{ from: location }}>\n                <Img\n                  src={\n                    poster_path\n                      ? `https://image.tmdb.org/t/p/original${poster_path}`\n                      : 'https://www.reelviews.net/resources/img/default_poster.jpg'\n                  }\n                  alt=\"poster movie\"\n                />\n                <Description>{title}</Description>\n              </Link>\n            </Item>\n          );\n        })}\n      </List>\n    </>\n  );\n};\n\nexport default MoviesList;\n","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  justify-content: center;\n  align-items: baseline;\n  flex-wrap: wrap;\n  gap: 30px;\n  margin-bottom: 20px;\n`;\n\nexport const Item = styled.li`\n  text-align: center;\n\n  width: 300px;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover {\n    transform: scale(1.1);\n  }\n`;\n\nexport const Img = styled.img`\n  border: 1px solid lightskyblue;\n  border-radius: 8px;\n  margin-bottom: 5px;\n`;\n\nexport const Description = styled.p`\n  color: lightskyblue;\n`;\n\nexport const ListGenre = styled.ul`\n  list-style-type: none;\n  padding: 0;\n`;\nexport const ItemGenre = styled.li`\n  list-style-type: none;\n`;\n\nexport const Link = styled(NavLink)`\n  text-decoration: none;\n`;\n","import MoviesList from 'components/MoviesList/MoviesList';\nimport { useEffect, useState } from 'react';\nimport { GetTrendingMovies } from 'Service/GetMovies';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n    (async () => {\n      try {\n        const response = await GetTrendingMovies();\n        setMovies(response);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setIsLoading(false);\n      }\n    })();\n  }, []);\n\n  return (\n    <>\n      <MoviesList movies={movies} />\n      {isLoading && <div>Loading...</div>}\n    </>\n  );\n};\n\nexport default Home;\n"],"names":["axios","GetTrendingMovies","params","api_key","response","data","results","GetSearchMovies","query","page","include_adult","language","GetDetailsMovie","id","GetCastData","cast","GetReviewsData","movies","location","useLocation","map","idx","poster_path","title","to","state","from","src","alt","List","styled","Item","Img","Description","ListGenre","ItemGenre","Link","NavLink","useState","setMovies","isLoading","setIsLoading","useEffect","console","log"],"sourceRoot":""}